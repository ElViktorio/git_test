git config - указывает конфигурацию для Git 
git config -l - посмотреть конфигурации
git config --global user.name "Kot Bantik" -задача в глобальной конфигурации имя пользователя
git config --global user.email "supercat@vv.com" - задача в глобальной конфигурации почты пользователя

git init - инициализация репозитория. Выполнять из cmd внутри папку, которую хотим сделать репозиторием
git status - отслеживание состояние текущей директории (мастер ветки)
git add <file name> - добавление файла в отслеживание git
git add . - добавление всех файлов в текущей директории
git rm --cached <file> - перестать следить за изменениями файла
следующее изменение
git commit -m "название коммита" - произведение коммита
.gitignore.txt - создается и помещатся в репозиторий с названиями файлов и папок, которые мы не хотим помещать в git (а именно в staging area)
git branch - отображение списка веток в текущей директории
git branch <name> создание новой ветки текущей директории
git branch -D <название ветки> удаление ветки из текущей директории
git checkout <название ветки> - переключение на другую ветку (переход)
git checkout -b <name> - создание новой ветки с одновременным переключением на нее
echo "содердимое текстового файла" > названи файла.txt - создает файл с указанным содержимым
rockstar
git log - запрос истории изменений. Эта команда выводит все коммиты от новых к старым и всю информацию о каждом отдельном коммите
Для того, чтобы выйти из лога, достаточно нажать клавишу q
параметры git log:
	1) -число. Напрример git log -1 покажет посследний коммит
	2) аргумент -p (или --patch)  покажет разницу (выводит патч), внесенную в каждый коммит. 
	3) --stat покажет краткую статистику по каждому коммиту
	4) --pretty меняет формат вывода лога. В сочетании с аргументом format  и необходимыми параметрами для вывода информации (перечисляются после двоеточия в кавычках вместе со знаком % и через пробел; все доступные параметры указаны ниже) мы можем сгенерировать вывод информации по коммитам для автоматического анализа:
	git log --pretty=format:"%h %an %ae %s"
	Запись "%h %an %ae %s"  означает, что информацию по коммитам мы хотим видеть в следующем формате: "%сокращенный_хэш_коммита   %кто_сделал   %с_какой_почты   %с_каким_комментарием_к_коммиту". 
	5) oneline выводит каждый коммит в одну строку, что удобно для просмотра большого количества коммитов:
	6) Найти коммиты определенного автора можно командой
	git log --author="Кот Бантик"
Просмотр отдельного коммита 

git show - Просмотр отдельного коммита. Чтобы просмотреть отдельный коммит, нам нужно узнать его хэш, который выводится в любой команде git log.
git checkout -- file1.txt - отмена изменений с файлом в рабочем каталоге
git diff --staged - показывает различия в проиндексированном файле(staged) и им же в рабочем каталоге
